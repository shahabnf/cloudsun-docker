name: Deploy Docker Image to ECR

on: 
  push:
    branches: [ master ]

env:
  IMAGE_TAG: v2.3
        
jobs:
  
  build-Docker-Image:
    
    name: Build Docker Image
    runs-on: ubuntu-latest

    strategy:
        matrix:
          ECR_REPOSITORY:
              # list your ECR_REPOSITORY here
              - cloud
              - sun

    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build Image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cd ${{ matrix.ECR_REPOSITORY }}/
        ls -ltra
        # Build Docker image
        docker build -t $ECR_REGISTRY/${{ matrix.ECR_REPOSITORY }}:$IMAGE_TAG .

    - name: Test Image 
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Unit test, map port 80 to application port (80) in container
        docker run -d -p 80:80 --name nodeapp $ECR_REGISTRY/${{ matrix.ECR_REPOSITORY }}:$IMAGE_TAG
        docker ps
        echo "Put Pause for 10 seconds and let container start"
        sleep 10
        curl localhost -vvv

    - name: Push Image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Push Cloud image to AWS ECR
        docker push $ECR_REGISTRY/${{ matrix.ECR_REPOSITORY }}:$IMAGE_TAG